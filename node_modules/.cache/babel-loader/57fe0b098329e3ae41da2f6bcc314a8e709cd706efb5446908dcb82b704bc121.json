{"ast":null,"code":"var _jsxFileName = \"/Users/alasdairmacmillan/Claude/Spanish/src/components/SpanishLearningGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LevelSelection from './LevelSelection';\nimport GameInterface from './GameInterface';\nimport Analytics from './Analytics';\nimport Settings from './Settings';\nimport RandomConfig from './RandomConfig';\nimport { useWordStats } from '../utils/wordUtils';\nimport { levels } from '../data/words';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpanishLearningGame = () => {\n  _s();\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  const [isRandomMode, setIsRandomMode] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [hintsEnabled, setHintsEnabled] = useState(true);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showRandomConfig, setShowRandomConfig] = useState(false);\n  const [selectedLevelsForRandom, setSelectedLevelsForRandom] = useState({\n    A1: true,\n    A2: true,\n    B1: true,\n    B2: true\n  });\n\n  // Initialize these props with default values\n  const [multipleChoiceOptions, setMultipleChoiceOptions] = useState([]);\n  const [fillBlankSentence, setFillBlankSentence] = useState('');\n  const [fillBlankAnswer, setFillBlankAnswer] = useState('');\n\n  // Use the custom hook for word management\n  const {\n    wordStats,\n    availableWords,\n    currentWord,\n    questionType,\n    userAnswer,\n    selectedChoice,\n    feedback,\n    score,\n    streak,\n    wordsCompleted,\n    sessionStats,\n    settings,\n    setSettings,\n    initializeWordPool,\n    generateNextQuestion,\n    checkAnswer,\n    setUserAnswer,\n    setSelectedChoice,\n    setFeedback,\n    setScore,\n    setStreak,\n    setWordsCompleted\n  } = useWordStats();\n  const startRandomMode = () => {\n    const selectedLevelCount = Object.values(selectedLevelsForRandom).filter(Boolean).length;\n    if (selectedLevelCount === 0) {\n      alert('Please select at least one level for random mode.');\n      return;\n    }\n    setShowRandomConfig(false);\n    startGame('ALL', 'ALL', true);\n  };\n  const startGame = (level, topic, randomMode = false) => {\n    setSelectedLevel(level);\n    setSelectedTopic(topic);\n    setIsRandomMode(randomMode);\n    setGameStarted(true);\n    setScore(0);\n    setStreak(0);\n    setWordsCompleted(0);\n    setFeedback(null);\n\n    // Reset question-specific states\n    setMultipleChoiceOptions([]);\n    setFillBlankSentence('');\n    setFillBlankAnswer('');\n    initializeWordPool(level, topic, randomMode, selectedLevelsForRandom);\n  };\n  const resetGame = () => {\n    setSelectedLevel(null);\n    setSelectedTopic(null);\n    setIsRandomMode(false);\n    setGameStarted(false);\n    setFeedback(null);\n    setShowAnalytics(false);\n    setShowSettings(false);\n    setShowRandomConfig(false);\n\n    // Reset question-specific states\n    setMultipleChoiceOptions([]);\n    setFillBlankSentence('');\n    setFillBlankAnswer('');\n  };\n  if (!gameStarted) {\n    return /*#__PURE__*/_jsxDEV(LevelSelection, {\n      hintsEnabled: hintsEnabled,\n      setHintsEnabled: setHintsEnabled,\n      showRandomConfig: showRandomConfig,\n      setShowRandomConfig: setShowRandomConfig,\n      showSettings: showSettings,\n      setShowSettings: setShowSettings,\n      startGame: startGame,\n      selectedLevelsForRandom: selectedLevelsForRandom,\n      setSelectedLevelsForRandom: setSelectedLevelsForRandom,\n      startRandomMode: startRandomMode,\n      settings: settings,\n      setSettings: setSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GameInterface, {\n      selectedLevel: selectedLevel,\n      selectedTopic: selectedTopic,\n      isRandomMode: isRandomMode,\n      hintsEnabled: hintsEnabled,\n      setHintsEnabled: setHintsEnabled,\n      showAnalytics: showAnalytics,\n      setShowAnalytics: setShowAnalytics,\n      showSettings: showSettings,\n      setShowSettings: setShowSettings,\n      resetGame: resetGame,\n      currentWord: currentWord,\n      questionType: questionType,\n      userAnswer: userAnswer,\n      selectedChoice: selectedChoice,\n      feedback: feedback,\n      score: score,\n      streak: streak,\n      wordsCompleted: wordsCompleted,\n      sessionStats: sessionStats,\n      wordStats: wordStats,\n      settings: settings,\n      selectedLevelsForRandom: selectedLevelsForRandom,\n      checkAnswer: checkAnswer,\n      setUserAnswer: setUserAnswer,\n      setSelectedChoice: setSelectedChoice,\n      generateNextQuestion: generateNextQuestion\n      // Pass the missing props\n      ,\n      multipleChoiceOptions: multipleChoiceOptions,\n      fillBlankSentence: fillBlankSentence,\n      fillBlankAnswer: fillBlankAnswer\n      // Pass levels data\n      ,\n      levels: levels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), showAnalytics && /*#__PURE__*/_jsxDEV(Analytics, {\n      sessionStats: sessionStats,\n      wordStats: wordStats,\n      settings: settings,\n      setShowAnalytics: setShowAnalytics,\n      wordsCompleted: wordsCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(Settings, {\n      settings: settings,\n      setSettings: setSettings,\n      setShowSettings: setShowSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), showRandomConfig && /*#__PURE__*/_jsxDEV(RandomConfig, {\n      selectedLevelsForRandom: selectedLevelsForRandom,\n      setSelectedLevelsForRandom: setSelectedLevelsForRandom,\n      setShowRandomConfig: setShowRandomConfig,\n      startRandomMode: startRandomMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SpanishLearningGame, \"XteHqzCzUBQG5/HuK+tn6dZ9nCo=\", false, function () {\n  return [useWordStats];\n});\n_c = SpanishLearningGame;\nexport default SpanishLearningGame;\nvar _c;\n$RefreshReg$(_c, \"SpanishLearningGame\");","map":{"version":3,"names":["React","useState","useEffect","LevelSelection","GameInterface","Analytics","Settings","RandomConfig","useWordStats","levels","jsxDEV","_jsxDEV","Fragment","_Fragment","SpanishLearningGame","_s","selectedLevel","setSelectedLevel","selectedTopic","setSelectedTopic","isRandomMode","setIsRandomMode","gameStarted","setGameStarted","hintsEnabled","setHintsEnabled","showAnalytics","setShowAnalytics","showSettings","setShowSettings","showRandomConfig","setShowRandomConfig","selectedLevelsForRandom","setSelectedLevelsForRandom","A1","A2","B1","B2","multipleChoiceOptions","setMultipleChoiceOptions","fillBlankSentence","setFillBlankSentence","fillBlankAnswer","setFillBlankAnswer","wordStats","availableWords","currentWord","questionType","userAnswer","selectedChoice","feedback","score","streak","wordsCompleted","sessionStats","settings","setSettings","initializeWordPool","generateNextQuestion","checkAnswer","setUserAnswer","setSelectedChoice","setFeedback","setScore","setStreak","setWordsCompleted","startRandomMode","selectedLevelCount","Object","values","filter","Boolean","length","alert","startGame","level","topic","randomMode","resetGame","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/alasdairmacmillan/Claude/Spanish/src/components/SpanishLearningGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LevelSelection from './LevelSelection';\nimport GameInterface from './GameInterface';\nimport Analytics from './Analytics';\nimport Settings from './Settings';\nimport RandomConfig from './RandomConfig';\nimport { useWordStats } from '../utils/wordUtils';\nimport { levels } from '../data/words';\n\nconst SpanishLearningGame = () => {\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  const [isRandomMode, setIsRandomMode] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [hintsEnabled, setHintsEnabled] = useState(true);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showRandomConfig, setShowRandomConfig] = useState(false);\n  const [selectedLevelsForRandom, setSelectedLevelsForRandom] = useState({\n    A1: true,\n    A2: true,\n    B1: true,\n    B2: true\n  });\n\n  // Initialize these props with default values\n  const [multipleChoiceOptions, setMultipleChoiceOptions] = useState([]);\n  const [fillBlankSentence, setFillBlankSentence] = useState('');\n  const [fillBlankAnswer, setFillBlankAnswer] = useState('');\n\n  \n  // Use the custom hook for word management\n  const {\n    wordStats,\n    availableWords,\n    currentWord,\n    questionType,\n    userAnswer,\n    selectedChoice,\n    feedback,\n    score,\n    streak,\n    wordsCompleted,\n    sessionStats,\n    settings,\n    setSettings,\n    initializeWordPool,\n    generateNextQuestion,\n    checkAnswer,\n    setUserAnswer,\n    setSelectedChoice,\n    setFeedback,\n    setScore,\n    setStreak,\n    setWordsCompleted\n  } = useWordStats();\n\n  const startRandomMode = () => {\n    const selectedLevelCount = Object.values(selectedLevelsForRandom).filter(Boolean).length;\n    if (selectedLevelCount === 0) {\n      alert('Please select at least one level for random mode.');\n      return;\n    }\n    setShowRandomConfig(false);\n    startGame('ALL', 'ALL', true);\n  };\n\n  const startGame = (level, topic, randomMode = false) => {\n    setSelectedLevel(level);\n    setSelectedTopic(topic);\n    setIsRandomMode(randomMode);\n    setGameStarted(true);\n    setScore(0);\n    setStreak(0);\n    setWordsCompleted(0);\n    setFeedback(null);\n    \n    // Reset question-specific states\n    setMultipleChoiceOptions([]);\n    setFillBlankSentence('');\n    setFillBlankAnswer('');\n    \n    initializeWordPool(level, topic, randomMode, selectedLevelsForRandom);\n  };\n\n  const resetGame = () => {\n    setSelectedLevel(null);\n    setSelectedTopic(null);\n    setIsRandomMode(false);\n    setGameStarted(false);\n    setFeedback(null);\n    setShowAnalytics(false);\n    setShowSettings(false);\n    setShowRandomConfig(false);\n    \n    // Reset question-specific states\n    setMultipleChoiceOptions([]);\n    setFillBlankSentence('');\n    setFillBlankAnswer('');\n  };\n\n  if (!gameStarted) {\n    return (\n      <LevelSelection\n        hintsEnabled={hintsEnabled}\n        setHintsEnabled={setHintsEnabled}\n        showRandomConfig={showRandomConfig}\n        setShowRandomConfig={setShowRandomConfig}\n        showSettings={showSettings}\n        setShowSettings={setShowSettings}\n        startGame={startGame}\n        selectedLevelsForRandom={selectedLevelsForRandom}\n        setSelectedLevelsForRandom={setSelectedLevelsForRandom}\n        startRandomMode={startRandomMode}\n        settings={settings}\n        setSettings={setSettings}\n      />\n    );\n  }\n\n  return (\n    <>\n      <GameInterface\n        selectedLevel={selectedLevel}\n        selectedTopic={selectedTopic}\n        isRandomMode={isRandomMode}\n        hintsEnabled={hintsEnabled}\n        setHintsEnabled={setHintsEnabled}\n        showAnalytics={showAnalytics}\n        setShowAnalytics={setShowAnalytics}\n        showSettings={showSettings}\n        setShowSettings={setShowSettings}\n        resetGame={resetGame}\n        currentWord={currentWord}\n        questionType={questionType}\n        userAnswer={userAnswer}\n        selectedChoice={selectedChoice}\n        feedback={feedback}\n        score={score}\n        streak={streak}\n        wordsCompleted={wordsCompleted}\n        sessionStats={sessionStats}\n        wordStats={wordStats}\n        settings={settings}\n        selectedLevelsForRandom={selectedLevelsForRandom}\n        checkAnswer={checkAnswer}\n        setUserAnswer={setUserAnswer}\n        setSelectedChoice={setSelectedChoice}\n        generateNextQuestion={generateNextQuestion}\n        // Pass the missing props\n        multipleChoiceOptions={multipleChoiceOptions}\n        fillBlankSentence={fillBlankSentence}\n        fillBlankAnswer={fillBlankAnswer}\n        // Pass levels data\n        levels={levels}\n      />\n      \n      {showAnalytics && (\n        <Analytics\n          sessionStats={sessionStats}\n          wordStats={wordStats}\n          settings={settings}\n          setShowAnalytics={setShowAnalytics}\n          wordsCompleted={wordsCompleted}\n        />\n      )}\n      \n      {showSettings && (\n        <Settings\n          settings={settings}\n          setSettings={setSettings}\n          setShowSettings={setShowSettings}\n        />\n      )}\n      \n      {showRandomConfig && (\n        <RandomConfig\n          selectedLevelsForRandom={selectedLevelsForRandom}\n          setSelectedLevelsForRandom={setSelectedLevelsForRandom}\n          setShowRandomConfig={setShowRandomConfig}\n          startRandomMode={startRandomMode}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SpanishLearningGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}