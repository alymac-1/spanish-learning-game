{"ast":null,"code":"var _jsxFileName = \"/Users/alasdairmacmillan/Claude/Spanish/src/components/SpanishLearningGame.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/components/SpanishLearningGame.js - Updated with Save/Load Integration\nimport React, { useState, useEffect } from 'react';\nimport LevelSelection from './LevelSelection';\n//import GameInterface from './GameInterface';\nimport Analytics from './Analytics';\nimport Settings from './Settings';\nimport RandomConfig from './RandomConfig';\nimport { useWordStats } from '../utils/wordUtils';\nimport { autoSaveProgress } from '../utils/saveUtils';\nconst SpanishLearningGame = () => {\n  _s();\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  const [isRandomMode, setIsRandomMode] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [hintsEnabled, setHintsEnabled] = useState(true);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showRandomConfig, setShowRandomConfig] = useState(false);\n  const [selectedLevelsForRandom, setSelectedLevelsForRandom] = useState({\n    A1: true,\n    A2: true,\n    B1: true,\n    B2: true\n  });\n  const [multipleChoiceOptions, setMultipleChoiceOptions] = useState([]);\n  const [fillBlankSentence, setFillBlankSentence] = useState('');\n  const [fillBlankAnswer, setFillBlankAnswer] = useState('');\n\n  // Use the custom hook for word management\n  const {\n    wordStats,\n    availableWords,\n    currentWord,\n    questionType,\n    userAnswer,\n    selectedChoice,\n    feedback,\n    score,\n    streak,\n    wordsCompleted,\n    sessionStats,\n    settings,\n    setSettings,\n    initializeWordPool,\n    generateNextQuestion,\n    checkAnswer,\n    setUserAnswer,\n    setSelectedChoice,\n    setFeedback,\n    setScore,\n    setStreak,\n    setWordsCompleted\n  } = useWordStats();\n\n  // Auto-save progress periodically\n  useEffect(() => {\n    if (gameStarted && wordsCompleted > 0) {\n      const gameState = {\n        wordStats,\n        sessionStats,\n        settings,\n        score,\n        streak,\n        wordsCompleted,\n        selectedLevel,\n        selectedTopic,\n        isRandomMode,\n        selectedLevelsForRandom\n      };\n\n      // Auto-save every 5 questions\n      if (wordsCompleted % 5 === 0) {\n        autoSaveProgress(gameState);\n      }\n    }\n  }, [wordsCompleted, gameStarted]);\n  const handleLoadGameData = loadedData => {\n    try {\n      // Apply loaded settings\n      if (loadedData.settings) {\n        setSettings(loadedData.settings);\n      }\n\n      // Apply game progress\n      if (loadedData.gameProgress) {\n        setScore(loadedData.gameProgress.totalScore || 0);\n        setStreak(loadedData.gameProgress.currentStreak || 0);\n        setWordsCompleted(loadedData.gameProgress.wordsCompleted || 0);\n\n        // Resume game state if applicable\n        if (loadedData.gameProgress.selectedLevel) {\n          setSelectedLevel(loadedData.gameProgress.selectedLevel);\n          setSelectedTopic(loadedData.gameProgress.selectedTopic);\n          setIsRandomMode(loadedData.gameProgress.isRandomMode || false);\n          setSelectedLevelsForRandom(loadedData.gameProgress.selectedLevelsForRandom || {\n            A1: true,\n            A2: true,\n            B1: true,\n            B2: true\n          });\n        }\n      }\n\n      // The wordStats will be handled by the useWordStats hook if we pass it the loaded data\n      console.log('Game data loaded successfully:', loadedData);\n      return true;\n    } catch (error) {\n      console.error('Failed to apply loaded data:', error);\n      return false;\n    }\n  };\n  const startRandomMode = () => {\n    const selectedLevelCount = Object.values(selectedLevelsForRandom).filter(Boolean).length;\n    if (selectedLevelCount === 0) {\n      alert('Please select at least one level for random mode.');\n      return;\n    }\n    setShowRandomConfig(false);\n    startGame('ALL', 'ALL', true);\n  };\n  const startGame = (level, topic, randomMode = false) => {\n    setSelectedLevel(level);\n    setSelectedTopic(topic);\n    setIsRandomMode(randomMode);\n    setGameStarted(true);\n    setScore(0);\n    setStreak(0);\n    setWordsCompleted(0);\n    setFeedback(null);\n    initializeWordPool(level, topic, randomMode, selectedLevelsForRandom);\n  };\n  const resetGame = () => {\n    setSelectedLevel(null);\n    setSelectedTopic(null);\n    setIsRandomMode(false);\n    setGameStarted(false);\n    setFeedback(null);\n    setShowAnalytics(false);\n    setShowSettings(false);\n    setShowRandomConfig(false);\n  };\n  if (!gameStarted) {\n    return /*#__PURE__*/_jsxDEV(LevelSelection, {\n      hintsEnabled: hintsEnabled,\n      setHintsEnabled: setHintsEnabled,\n      showRandomConfig: showRandomConfig,\n      setShowRandomConfig: setShowRandomConfig,\n      showSettings: showSettings,\n      setShowSettings: setShowSettings,\n      startGame: startGame,\n      selectedLevelsForRandom: selectedLevelsForRandom,\n      setSelectedLevelsForRandom: setSelectedLevelsForRandom,\n      startRandomMode: startRandomMode,\n      settings: settings,\n      setSettings: setSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GameInterface, {\n      selectedLevel: selectedLevel,\n      selectedTopic: selectedTopic,\n      isRandomMode: isRandomMode,\n      hintsEnabled: hintsEnabled,\n      setHintsEnabled: setHintsEnabled,\n      showAnalytics: showAnalytics,\n      setShowAnalytics: setShowAnalytics,\n      showSettings: showSettings,\n      setShowSettings: setShowSettings,\n      resetGame: resetGame,\n      currentWord: currentWord,\n      questionType: questionType,\n      userAnswer: userAnswer,\n      selectedChoice: selectedChoice,\n      feedback: feedback,\n      score: score,\n      streak: streak,\n      wordsCompleted: wordsCompleted,\n      sessionStats: sessionStats,\n      wordStats: wordStats,\n      settings: settings,\n      selectedLevelsForRandom: selectedLevelsForRandom,\n      checkAnswer: checkAnswer,\n      setUserAnswer: setUserAnswer,\n      setSelectedChoice: setSelectedChoice,\n      generateNextQuestion: generateNextQuestion,\n      levels: {} // Pass levels object here\n      ,\n      multipleChoiceOptions: multipleChoiceOptions,\n      fillBlankSentence: fillBlankSentence,\n      fillBlankAnswer: fillBlankAnswer,\n      onLoadGameData: handleLoadGameData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), showAnalytics && /*#__PURE__*/_jsxDEV(Analytics, {\n      sessionStats: sessionStats,\n      wordStats: wordStats,\n      settings: settings,\n      setShowAnalytics: setShowAnalytics,\n      wordsCompleted: wordsCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(Settings, {\n      settings: settings,\n      setSettings: setSettings,\n      setShowSettings: setShowSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), showRandomConfig && /*#__PURE__*/_jsxDEV(RandomConfig, {\n      selectedLevelsForRandom: selectedLevelsForRandom,\n      setSelectedLevelsForRandom: setSelectedLevelsForRandom,\n      setShowRandomConfig: setShowRandomConfig,\n      startRandomMode: startRandomMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SpanishLearningGame, \"hdWcyOvlMZJHqEnSkPiIfa0uhE8=\", false, function () {\n  return [useWordStats];\n});\n_c = SpanishLearningGame;\nexport const saveGameData = gameState => {\n  try {\n    const saveData = {\n      timestamp: Date.now(),\n      version: '1.0',\n      wordStats: Array.from(gameState.wordStats.entries()).map(([key, stats]) => ({\n        key,\n        ...stats,\n        learningHistory: stats.learningHistory || []\n      })),\n      sessionStats: {\n        ...gameState.sessionStats,\n        totalPlayTime: gameState.sessionStats.startTime ? Date.now() - gameState.sessionStats.startTime : 0\n      },\n      settings: gameState.settings,\n      gameProgress: {\n        totalScore: gameState.score,\n        currentStreak: gameState.streak,\n        wordsCompleted: gameState.wordsCompleted,\n        selectedLevel: gameState.selectedLevel,\n        selectedTopic: gameState.selectedTopic,\n        isRandomMode: gameState.isRandomMode,\n        selectedLevelsForRandom: gameState.selectedLevelsForRandom\n      }\n    };\n\n    // Create downloadable file\n    const dataStr = JSON.stringify(saveData, null, 2);\n    const dataBlob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    const dateStr = new Date().toISOString().split('T')[0];\n    link.download = `spanish-learning-progress-${dateStr}.json`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n    return {\n      success: true,\n      message: 'Progress saved successfully!'\n    };\n  } catch (error) {\n    console.error('Save failed:', error);\n    return {\n      success: false,\n      message: 'Failed to save progress. Please try again.'\n    };\n  }\n};\nexport const loadGameData = fileData => {\n  try {\n    const data = JSON.parse(fileData);\n\n    // Validate data structure\n    if (!data.version || !data.wordStats || !data.sessionStats) {\n      throw new Error('Invalid save file format');\n    }\n\n    // Convert wordStats back to Map\n    const wordStatsMap = new Map();\n    data.wordStats.forEach(({\n      key,\n      ...stats\n    }) => {\n      wordStatsMap.set(key, {\n        ...stats,\n        learningHistory: stats.learningHistory || [],\n        nextReview: new Date(stats.nextReview),\n        lastSeen: stats.lastSeen ? new Date(stats.lastSeen) : null,\n        lastCorrect: stats.lastCorrect ? new Date(stats.lastCorrect) : null\n      });\n    });\n    return {\n      success: true,\n      data: {\n        wordStats: wordStatsMap,\n        sessionStats: data.sessionStats,\n        settings: data.settings,\n        gameProgress: data.gameProgress\n      }\n    };\n  } catch (error) {\n    console.error('Load failed:', error);\n    return {\n      success: false,\n      message: 'Failed to load progress. Invalid file format.'\n    };\n  }\n};\nexport const exportLearningReport = gameState => {\n  try {\n    const analytics = calculateAnalytics(gameState);\n    const reportData = {\n      generatedAt: new Date().toISOString(),\n      summary: {\n        totalWords: analytics.totalWords,\n        masteredWords: analytics.masteredWords,\n        averageAccuracy: analytics.averageAccuracy,\n        totalStudyTime: analytics.sessionTime,\n        wordsPerMinute: analytics.wordsPerMinute,\n        currentStreak: gameState.streak,\n        bestStreak: gameState.sessionStats.streakRecord\n      },\n      wordProgress: Array.from(gameState.wordStats.entries()).map(([key, stats]) => {\n        var _stats$word, _stats$word2;\n        return {\n          word: key,\n          spanish: ((_stats$word = stats.word) === null || _stats$word === void 0 ? void 0 : _stats$word.spanish) || 'Unknown',\n          english: ((_stats$word2 = stats.word) === null || _stats$word2 === void 0 ? void 0 : _stats$word2.english) || 'Unknown',\n          masteryLevel: (stats.masteryLevel * 100).toFixed(1) + '%',\n          timesCorrect: stats.timesCorrect,\n          timesShown: stats.timesShown,\n          accuracy: stats.timesShown > 0 ? (stats.timesCorrect / stats.timesShown * 100).toFixed(1) + '%' : '0%',\n          nextReview: stats.nextReview.toLocaleDateString()\n        };\n      }),\n      difficultWords: gameState.sessionStats.difficultWords.map(wordKey => {\n        const stats = gameState.wordStats.get(wordKey);\n        return {\n          word: wordKey,\n          accuracy: stats && stats.timesShown > 0 ? (stats.timesCorrect / stats.timesShown * 100).toFixed(1) + '%' : '0%'\n        };\n      })\n    };\n\n    // Create CSV format for easy viewing\n    let csvContent = \"Spanish Learning Progress Report\\n\";\n    csvContent += `Generated: ${new Date().toLocaleDateString()}\\n\\n`;\n    csvContent += \"SUMMARY\\n\";\n    csvContent += `Total Words,${reportData.summary.totalWords}\\n`;\n    csvContent += `Mastered Words,${reportData.summary.masteredWords}\\n`;\n    csvContent += `Average Accuracy,${reportData.summary.averageAccuracy.toFixed(1)}%\\n`;\n    csvContent += `Study Time,${reportData.summary.totalStudyTime.toFixed(1)} minutes\\n`;\n    csvContent += `Words Per Minute,${reportData.summary.wordsPerMinute.toFixed(1)}\\n\\n`;\n    csvContent += \"WORD PROGRESS\\n\";\n    csvContent += \"Spanish,English,Mastery Level,Correct,Total,Accuracy,Next Review\\n\";\n    reportData.wordProgress.forEach(word => {\n      csvContent += `${word.spanish},${word.english},${word.masteryLevel},${word.timesCorrect},${word.timesShown},${word.accuracy},${word.nextReview}\\n`;\n    });\n    const csvBlob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(csvBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `spanish-learning-report-${new Date().toISOString().split('T')[0]}.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n    return {\n      success: true,\n      message: 'Learning report exported successfully!'\n    };\n  } catch (error) {\n    console.error('Export failed:', error);\n    return {\n      success: false,\n      message: 'Failed to export report. Please try again.'\n    };\n  }\n};\nconst calculateAnalytics = gameState => {\n  const totalWords = gameState.wordStats.size;\n  const masteredWords = Array.from(gameState.wordStats.values()).filter(stat => stat.masteryLevel >= gameState.settings.masteryThreshold).length;\n  const averageAccuracy = gameState.sessionStats.questionsAnswered > 0 ? gameState.sessionStats.correctAnswers / gameState.sessionStats.questionsAnswered * 100 : 0;\n  const sessionTime = gameState.sessionStats.startTime ? (Date.now() - gameState.sessionStats.startTime) / 1000 / 60 : 0;\n  return {\n    totalWords,\n    masteredWords,\n    averageAccuracy,\n    sessionTime,\n    wordsPerMinute: sessionTime > 0 ? gameState.wordsCompleted / sessionTime : 0\n  };\n};\n\n// Auto-save functionality (saves to localStorage as backup)\n// src/components/GameInterface.js - Updated with Save Button\n//import { Trophy, Star, BarChart3, Settings, Lightbulb, LightbulbOff, RotateCcw, Brain, CheckCircle, XCircle, Download, Upload, FileText } from 'lucide-react';\nimport QuestionRenderer from './QuestionRenderer';\n//import { saveGameData, loadGameData, exportLearningReport } from '../utils/saveUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameInterface = ({\n  selectedLevel,\n  selectedTopic,\n  isRandomMode,\n  hintsEnabled,\n  setHintsEnabled,\n  showAnalytics,\n  setShowAnalytics,\n  showSettings,\n  setShowSettings,\n  resetGame,\n  currentWord,\n  questionType,\n  userAnswer,\n  selectedChoice,\n  feedback,\n  score,\n  streak,\n  wordsCompleted,\n  sessionStats,\n  wordStats,\n  settings,\n  selectedLevelsForRandom,\n  checkAnswer,\n  setUserAnswer,\n  setSelectedChoice,\n  generateNextQuestion,\n  levels,\n  multipleChoiceOptions,\n  fillBlankSentence,\n  fillBlankAnswer,\n  // Save/Load functions that should be passed from parent\n  onLoadGameData\n}) => {\n  _s2();\n  const [saveMessage, setSaveMessage] = useState('');\n  const [showSaveOptions, setShowSaveOptions] = useState(false);\n  const getAnalyticsData = () => {\n    const totalWords = wordStats.size;\n    const masteredWords = Array.from(wordStats.values()).filter(stat => stat.masteryLevel >= settings.masteryThreshold).length;\n    const averageAccuracy = sessionStats.questionsAnswered > 0 ? sessionStats.correctAnswers / sessionStats.questionsAnswered * 100 : 0;\n    const sessionTime = sessionStats.startTime ? (Date.now() - sessionStats.startTime) / 1000 / 60 : 0;\n    return {\n      totalWords,\n      masteredWords,\n      averageAccuracy,\n      sessionTime,\n      wordsPerMinute: sessionTime > 0 ? wordsCompleted / sessionTime : 0\n    };\n  };\n  const getCurrentWordStats = () => {\n    if (!currentWord) return null;\n    const key = `${currentWord.spanish}-${currentWord.english}`;\n    return wordStats.get(key);\n  };\n  const handleSave = () => {\n    const gameState = {\n      wordStats,\n      sessionStats,\n      settings,\n      score,\n      streak,\n      wordsCompleted,\n      selectedLevel,\n      selectedTopic,\n      isRandomMode,\n      selectedLevelsForRandom\n    };\n    const result = saveGameData(gameState);\n    setSaveMessage(result.message);\n    setTimeout(() => setSaveMessage(''), 3000);\n  };\n  const handleLoad = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const result = loadGameData(e.target.result);\n      if (result.success && onLoadGameData) {\n        onLoadGameData(result.data);\n        setSaveMessage('Progress loaded successfully!');\n      } else {\n        setSaveMessage(result.message);\n      }\n      setTimeout(() => setSaveMessage(''), 3000);\n    };\n    reader.readAsText(file);\n    event.target.value = ''; // Reset file input\n  };\n  const handleExportReport = () => {\n    const gameState = {\n      wordStats,\n      sessionStats,\n      settings,\n      score,\n      streak,\n      wordsCompleted\n    };\n    const result = exportLearningReport(gameState);\n    setSaveMessage(result.message);\n    setTimeout(() => setSaveMessage(''), 3000);\n  };\n  const currentStats = getCurrentWordStats();\n  const analytics = getAnalyticsData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-2xl p-8 max-w-lg w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Trophy, {\n            className: \"w-6 h-6 text-yellow-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl font-bold text-gray-800\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-2 px-2 py-1 bg-blue-100 text-blue-700 text-xs rounded-full\",\n            children: [analytics.masteredWords, \"/\", analytics.totalWords, \" mastered\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(Star, {\n              className: \"w-5 h-5 text-orange-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold text-gray-700\",\n              children: streak\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSaveOptions(!showSaveOptions),\n              className: \"p-2 bg-indigo-100 hover:bg-indigo-200 rounded-full transition-colors\",\n              title: \"Save/Load Options\",\n              children: /*#__PURE__*/_jsxDEV(Download, {\n                className: \"w-5 h-5 text-indigo-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this), showSaveOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute right-0 top-12 bg-white border border-gray-200 rounded-lg shadow-lg z-50 min-w-48\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSave,\n                className: \"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center gap-2 border-b border-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  className: \"w-4 h-4 text-green-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this), \"Save Progress\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center gap-2 cursor-pointer border-b border-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  className: \"w-4 h-4 text-blue-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 21\n                }, this), \"Load Progress\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".json\",\n                  onChange: handleLoad,\n                  className: \"hidden\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleExportReport,\n                className: \"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  className: \"w-4 h-4 text-purple-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 21\n                }, this), \"Export Report\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSaveOptions(false),\n                className: \"w-full px-4 py-2 text-center text-gray-500 hover:bg-gray-50 text-sm\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAnalytics(true),\n            className: \"p-2 bg-green-100 hover:bg-green-200 rounded-full transition-colors\",\n            title: \"View Analytics\",\n            children: /*#__PURE__*/_jsxDEV(BarChart3, {\n              className: \"w-5 h-5 text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSettings(true),\n            className: \"p-2 bg-gray-100 hover:bg-gray-200 rounded-full transition-colors\",\n            title: \"Settings\",\n            children: /*#__PURE__*/_jsxDEV(Settings, {\n              className: \"w-5 h-5 text-gray-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setHintsEnabled(!hintsEnabled),\n            className: `p-2 rounded-full transition-colors ${hintsEnabled ? 'bg-yellow-100 hover:bg-yellow-200 text-yellow-700' : 'bg-gray-100 hover:bg-gray-200 text-gray-600'}`,\n            title: hintsEnabled ? 'Disable hints' : 'Enable hints',\n            children: hintsEnabled ? /*#__PURE__*/_jsxDEV(Lightbulb, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(LightbulbOff, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetGame,\n            className: \"p-2 bg-gray-100 hover:bg-gray-200 rounded-full transition-colors\",\n            title: \"Reset Game\",\n            children: /*#__PURE__*/_jsxDEV(RotateCcw, {\n              className: \"w-5 h-5 text-gray-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), saveMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 p-3 rounded-lg text-sm ${saveMessage.includes('successfully') ? 'bg-green-100 text-green-800 border border-green-200' : 'bg-red-100 text-red-800 border border-red-200'}`,\n        children: saveMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-6\",\n        children: [isRandomMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg text-purple-600 mb-1 flex items-center justify-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Brain, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this), \"Smart Random Mode\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"AI-optimized learning \\u2022 \", Object.entries(selectedLevelsForRandom).filter(([_, selected]) => selected).map(([level]) => level).join(', '), \" levels\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg text-gray-600 mb-1\",\n            children: levels[selectedLevel].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-md text-gray-500 mb-2 capitalize\",\n            children: [selectedTopic, \" Topic\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center gap-4 text-sm text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Words: \", wordsCompleted]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Accuracy: \", analytics.averageAccuracy.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"WPM: \", analytics.wordsPerMinute.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this), currentStats && currentStats.timesShown > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 flex items-center justify-center gap-4 text-xs text-gray-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"This word: \", Math.round(currentStats.timesCorrect / currentStats.timesShown * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Mastery: \", Math.round(currentStats.masteryLevel * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this), settings.spacedRepetitionEnabled && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Next review: \", new Date(currentStats.nextReview).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this), currentWord && /*#__PURE__*/_jsxDEV(QuestionRenderer, {\n        currentWord: currentWord,\n        questionType: questionType,\n        userAnswer: userAnswer,\n        selectedChoice: selectedChoice,\n        feedback: feedback,\n        hintsEnabled: hintsEnabled,\n        settings: settings,\n        setUserAnswer: setUserAnswer,\n        setSelectedChoice: setSelectedChoice,\n        checkAnswer: checkAnswer,\n        multipleChoiceOptions: multipleChoiceOptions,\n        fillBlankSentence: fillBlankSentence,\n        fillBlankAnswer: fillBlankAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center gap-3 p-4 rounded-xl mb-4 ${feedback.type === 'correct' ? 'bg-green-100 text-green-800 border-2 border-green-300' : 'bg-red-100 text-red-800 border-2 border-red-300'}`,\n        children: [feedback.type === 'correct' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: feedback.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, this), feedback.details && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm opacity-80 mt-1\",\n            children: feedback.details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 11\n      }, this), streak > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-orange-600 font-semibold\",\n          children: [\"\\uD83D\\uDD25 \", streak, \" streak! +\", streak * 2, \" bonus points per answer!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this), streak === sessionStats.streakRecord && streak > 5 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-purple-600 text-sm\",\n          children: \"New personal record! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this), analytics.masteredWords > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-200 rounded-full h-2 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gradient-to-r from-green-400 to-green-600 h-2 rounded-full transition-all duration-500\",\n            style: {\n              width: `${analytics.masteredWords / analytics.totalWords * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Learning Progress: \", (analytics.masteredWords / analytics.totalWords * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-400\",\n          children: \"\\uD83D\\uDCBE Progress is automatically tracked \\u2022 Use save button to download backup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 533,\n    columnNumber: 5\n  }, this);\n};\n_s2(GameInterface, \"KP078AbL5R4A/cHT0QAeFkDA+9Q=\");\n_c2 = GameInterface;\nexport default GameInterface;\nvar _c, _c2;\n$RefreshReg$(_c, \"SpanishLearningGame\");\n$RefreshReg$(_c2, \"GameInterface\");","map":{"version":3,"names":["React","useState","useEffect","LevelSelection","Analytics","Settings","RandomConfig","useWordStats","autoSaveProgress","SpanishLearningGame","_s","selectedLevel","setSelectedLevel","selectedTopic","setSelectedTopic","isRandomMode","setIsRandomMode","gameStarted","setGameStarted","hintsEnabled","setHintsEnabled","showAnalytics","setShowAnalytics","showSettings","setShowSettings","showRandomConfig","setShowRandomConfig","selectedLevelsForRandom","setSelectedLevelsForRandom","A1","A2","B1","B2","multipleChoiceOptions","setMultipleChoiceOptions","fillBlankSentence","setFillBlankSentence","fillBlankAnswer","setFillBlankAnswer","wordStats","availableWords","currentWord","questionType","userAnswer","selectedChoice","feedback","score","streak","wordsCompleted","sessionStats","settings","setSettings","initializeWordPool","generateNextQuestion","checkAnswer","setUserAnswer","setSelectedChoice","setFeedback","setScore","setStreak","setWordsCompleted","gameState","handleLoadGameData","loadedData","gameProgress","totalScore","currentStreak","console","log","error","startRandomMode","selectedLevelCount","Object","values","filter","Boolean","length","alert","startGame","level","topic","randomMode","resetGame","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_Fragment","children","GameInterface","levels","onLoadGameData","_c","saveGameData","saveData","timestamp","Date","now","version","Array","from","entries","map","key","stats","learningHistory","totalPlayTime","startTime","dataStr","JSON","stringify","dataBlob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","dateStr","toISOString","split","download","body","appendChild","click","removeChild","revokeObjectURL","success","message","loadGameData","fileData","data","parse","Error","wordStatsMap","Map","forEach","set","nextReview","lastSeen","lastCorrect","exportLearningReport","analytics","calculateAnalytics","reportData","generatedAt","summary","totalWords","masteredWords","averageAccuracy","totalStudyTime","sessionTime","wordsPerMinute","bestStreak","streakRecord","wordProgress","_stats$word","_stats$word2","word","spanish","english","masteryLevel","toFixed","timesCorrect","timesShown","accuracy","toLocaleDateString","difficultWords","wordKey","get","csvContent","csvBlob","size","stat","masteryThreshold","questionsAnswered","correctAnswers","QuestionRenderer","jsxDEV","Fragment","_s2","saveMessage","setSaveMessage","showSaveOptions","setShowSaveOptions","getAnalyticsData","getCurrentWordStats","handleSave","result","setTimeout","handleLoad","event","file","target","files","reader","FileReader","onload","e","readAsText","value","handleExportReport","currentStats","className","Trophy","Star","onClick","title","Download","Upload","accept","onChange","FileText","BarChart3","Lightbulb","LightbulbOff","RotateCcw","includes","Brain","_","selected","join","name","Math","round","spacedRepetitionEnabled","CheckCircle","XCircle","details","style","width","_c2","$RefreshReg$"],"sources":["/Users/alasdairmacmillan/Claude/Spanish/src/components/SpanishLearningGame.js"],"sourcesContent":["// src/components/SpanishLearningGame.js - Updated with Save/Load Integration\nimport React, { useState, useEffect } from 'react';\nimport LevelSelection from './LevelSelection';\n//import GameInterface from './GameInterface';\nimport Analytics from './Analytics';\nimport Settings from './Settings';\nimport RandomConfig from './RandomConfig';\nimport { useWordStats } from '../utils/wordUtils';\nimport { autoSaveProgress } from '../utils/saveUtils';\n\nconst SpanishLearningGame = () => {\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  const [isRandomMode, setIsRandomMode] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [hintsEnabled, setHintsEnabled] = useState(true);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showRandomConfig, setShowRandomConfig] = useState(false);\n  const [selectedLevelsForRandom, setSelectedLevelsForRandom] = useState({\n    A1: true,\n    A2: true,\n    B1: true,\n    B2: true\n  });\n\n  const [multipleChoiceOptions, setMultipleChoiceOptions] = useState([]);\n  const [fillBlankSentence, setFillBlankSentence] = useState('');\n  const [fillBlankAnswer, setFillBlankAnswer] = useState('');\n  \n  // Use the custom hook for word management\n  const {\n    wordStats,\n    availableWords,\n    currentWord,\n    questionType,\n    userAnswer,\n    selectedChoice,\n    feedback,\n    score,\n    streak,\n    wordsCompleted,\n    sessionStats,\n    settings,\n    setSettings,\n    initializeWordPool,\n    generateNextQuestion,\n    checkAnswer,\n    setUserAnswer,\n    setSelectedChoice,\n    setFeedback,\n    setScore,\n    setStreak,\n    setWordsCompleted\n  } = useWordStats();\n\n  // Auto-save progress periodically\n  useEffect(() => {\n    if (gameStarted && wordsCompleted > 0) {\n      const gameState = {\n        wordStats,\n        sessionStats,\n        settings,\n        score,\n        streak,\n        wordsCompleted,\n        selectedLevel,\n        selectedTopic,\n        isRandomMode,\n        selectedLevelsForRandom\n      };\n      \n      // Auto-save every 5 questions\n      if (wordsCompleted % 5 === 0) {\n        autoSaveProgress(gameState);\n      }\n    }\n  }, [wordsCompleted, gameStarted]);\n\n  const handleLoadGameData = (loadedData) => {\n    try {\n      // Apply loaded settings\n      if (loadedData.settings) {\n        setSettings(loadedData.settings);\n      }\n\n      // Apply game progress\n      if (loadedData.gameProgress) {\n        setScore(loadedData.gameProgress.totalScore || 0);\n        setStreak(loadedData.gameProgress.currentStreak || 0);\n        setWordsCompleted(loadedData.gameProgress.wordsCompleted || 0);\n        \n        // Resume game state if applicable\n        if (loadedData.gameProgress.selectedLevel) {\n          setSelectedLevel(loadedData.gameProgress.selectedLevel);\n          setSelectedTopic(loadedData.gameProgress.selectedTopic);\n          setIsRandomMode(loadedData.gameProgress.isRandomMode || false);\n          setSelectedLevelsForRandom(loadedData.gameProgress.selectedLevelsForRandom || {\n            A1: true, A2: true, B1: true, B2: true\n          });\n        }\n      }\n\n      // The wordStats will be handled by the useWordStats hook if we pass it the loaded data\n      console.log('Game data loaded successfully:', loadedData);\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to apply loaded data:', error);\n      return false;\n    }\n  };\n\n  const startRandomMode = () => {\n    const selectedLevelCount = Object.values(selectedLevelsForRandom).filter(Boolean).length;\n    if (selectedLevelCount === 0) {\n      alert('Please select at least one level for random mode.');\n      return;\n    }\n    setShowRandomConfig(false);\n    startGame('ALL', 'ALL', true);\n  };\n\n  const startGame = (level, topic, randomMode = false) => {\n    setSelectedLevel(level);\n    setSelectedTopic(topic);\n    setIsRandomMode(randomMode);\n    setGameStarted(true);\n    setScore(0);\n    setStreak(0);\n    setWordsCompleted(0);\n    setFeedback(null);\n    \n    initializeWordPool(level, topic, randomMode, selectedLevelsForRandom);\n  };\n\n  const resetGame = () => {\n    setSelectedLevel(null);\n    setSelectedTopic(null);\n    setIsRandomMode(false);\n    setGameStarted(false);\n    setFeedback(null);\n    setShowAnalytics(false);\n    setShowSettings(false);\n    setShowRandomConfig(false);\n  };\n\n  if (!gameStarted) {\n    return (\n      <LevelSelection\n        hintsEnabled={hintsEnabled}\n        setHintsEnabled={setHintsEnabled}\n        showRandomConfig={showRandomConfig}\n        setShowRandomConfig={setShowRandomConfig}\n        showSettings={showSettings}\n        setShowSettings={setShowSettings}\n        startGame={startGame}\n        selectedLevelsForRandom={selectedLevelsForRandom}\n        setSelectedLevelsForRandom={setSelectedLevelsForRandom}\n        startRandomMode={startRandomMode}\n        settings={settings}\n        setSettings={setSettings}\n      />\n    );\n  }\n\n  return (\n    <>\n      <GameInterface\n        selectedLevel={selectedLevel}\n        selectedTopic={selectedTopic}\n        isRandomMode={isRandomMode}\n        hintsEnabled={hintsEnabled}\n        setHintsEnabled={setHintsEnabled}\n        showAnalytics={showAnalytics}\n        setShowAnalytics={setShowAnalytics}\n        showSettings={showSettings}\n        setShowSettings={setShowSettings}\n        resetGame={resetGame}\n        currentWord={currentWord}\n        questionType={questionType}\n        userAnswer={userAnswer}\n        selectedChoice={selectedChoice}\n        feedback={feedback}\n        score={score}\n        streak={streak}\n        wordsCompleted={wordsCompleted}\n        sessionStats={sessionStats}\n        wordStats={wordStats}\n        settings={settings}\n        selectedLevelsForRandom={selectedLevelsForRandom}\n        checkAnswer={checkAnswer}\n        setUserAnswer={setUserAnswer}\n        setSelectedChoice={setSelectedChoice}\n        generateNextQuestion={generateNextQuestion}\n        levels={{}} // Pass levels object here\n        multipleChoiceOptions={multipleChoiceOptions}\n        fillBlankSentence={fillBlankSentence}\n        fillBlankAnswer={fillBlankAnswer}\n        onLoadGameData={handleLoadGameData}\n      />\n      \n      {showAnalytics && (\n        <Analytics\n          sessionStats={sessionStats}\n          wordStats={wordStats}\n          settings={settings}\n          setShowAnalytics={setShowAnalytics}\n          wordsCompleted={wordsCompleted}\n        />\n      )}\n      \n      {showSettings && (\n        <Settings\n          settings={settings}\n          setSettings={setSettings}\n          setShowSettings={setShowSettings}\n        />\n      )}\n      \n      {showRandomConfig && (\n        <RandomConfig\n          selectedLevelsForRandom={selectedLevelsForRandom}\n          setSelectedLevelsForRandom={setSelectedLevelsForRandom}\n          setShowRandomConfig={setShowRandomConfig}\n          startRandomMode={startRandomMode}\n        />\n      )}\n    </>\n  );\n};\n\n\nexport const saveGameData = (gameState) => {\n  try {\n    const saveData = {\n      timestamp: Date.now(),\n      version: '1.0',\n      wordStats: Array.from(gameState.wordStats.entries()).map(([key, stats]) => ({\n        key,\n        ...stats,\n        learningHistory: stats.learningHistory || []\n      })),\n      sessionStats: {\n        ...gameState.sessionStats,\n        totalPlayTime: gameState.sessionStats.startTime \n          ? Date.now() - gameState.sessionStats.startTime \n          : 0\n      },\n      settings: gameState.settings,\n      gameProgress: {\n        totalScore: gameState.score,\n        currentStreak: gameState.streak,\n        wordsCompleted: gameState.wordsCompleted,\n        selectedLevel: gameState.selectedLevel,\n        selectedTopic: gameState.selectedTopic,\n        isRandomMode: gameState.isRandomMode,\n        selectedLevelsForRandom: gameState.selectedLevelsForRandom\n      }\n    };\n\n    // Create downloadable file\n    const dataStr = JSON.stringify(saveData, null, 2);\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\n    \n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    \n    const dateStr = new Date().toISOString().split('T')[0];\n    link.download = `spanish-learning-progress-${dateStr}.json`;\n    \n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    URL.revokeObjectURL(url);\n    \n    return { success: true, message: 'Progress saved successfully!' };\n  } catch (error) {\n    console.error('Save failed:', error);\n    return { success: false, message: 'Failed to save progress. Please try again.' };\n  }\n};\n\nexport const loadGameData = (fileData) => {\n  try {\n    const data = JSON.parse(fileData);\n    \n    // Validate data structure\n    if (!data.version || !data.wordStats || !data.sessionStats) {\n      throw new Error('Invalid save file format');\n    }\n    \n    // Convert wordStats back to Map\n    const wordStatsMap = new Map();\n    data.wordStats.forEach(({ key, ...stats }) => {\n      wordStatsMap.set(key, {\n        ...stats,\n        learningHistory: stats.learningHistory || [],\n        nextReview: new Date(stats.nextReview),\n        lastSeen: stats.lastSeen ? new Date(stats.lastSeen) : null,\n        lastCorrect: stats.lastCorrect ? new Date(stats.lastCorrect) : null\n      });\n    });\n    \n    return {\n      success: true,\n      data: {\n        wordStats: wordStatsMap,\n        sessionStats: data.sessionStats,\n        settings: data.settings,\n        gameProgress: data.gameProgress\n      }\n    };\n  } catch (error) {\n    console.error('Load failed:', error);\n    return { success: false, message: 'Failed to load progress. Invalid file format.' };\n  }\n};\n\nexport const exportLearningReport = (gameState) => {\n  try {\n    const analytics = calculateAnalytics(gameState);\n    const reportData = {\n      generatedAt: new Date().toISOString(),\n      summary: {\n        totalWords: analytics.totalWords,\n        masteredWords: analytics.masteredWords,\n        averageAccuracy: analytics.averageAccuracy,\n        totalStudyTime: analytics.sessionTime,\n        wordsPerMinute: analytics.wordsPerMinute,\n        currentStreak: gameState.streak,\n        bestStreak: gameState.sessionStats.streakRecord\n      },\n      wordProgress: Array.from(gameState.wordStats.entries()).map(([key, stats]) => ({\n        word: key,\n        spanish: stats.word?.spanish || 'Unknown',\n        english: stats.word?.english || 'Unknown',\n        masteryLevel: (stats.masteryLevel * 100).toFixed(1) + '%',\n        timesCorrect: stats.timesCorrect,\n        timesShown: stats.timesShown,\n        accuracy: stats.timesShown > 0 ? ((stats.timesCorrect / stats.timesShown) * 100).toFixed(1) + '%' : '0%',\n        nextReview: stats.nextReview.toLocaleDateString()\n      })),\n      difficultWords: gameState.sessionStats.difficultWords.map(wordKey => {\n        const stats = gameState.wordStats.get(wordKey);\n        return {\n          word: wordKey,\n          accuracy: stats && stats.timesShown > 0 \n            ? ((stats.timesCorrect / stats.timesShown) * 100).toFixed(1) + '%' \n            : '0%'\n        };\n      })\n    };\n\n    // Create CSV format for easy viewing\n    let csvContent = \"Spanish Learning Progress Report\\n\";\n    csvContent += `Generated: ${new Date().toLocaleDateString()}\\n\\n`;\n    csvContent += \"SUMMARY\\n\";\n    csvContent += `Total Words,${reportData.summary.totalWords}\\n`;\n    csvContent += `Mastered Words,${reportData.summary.masteredWords}\\n`;\n    csvContent += `Average Accuracy,${reportData.summary.averageAccuracy.toFixed(1)}%\\n`;\n    csvContent += `Study Time,${reportData.summary.totalStudyTime.toFixed(1)} minutes\\n`;\n    csvContent += `Words Per Minute,${reportData.summary.wordsPerMinute.toFixed(1)}\\n\\n`;\n    \n    csvContent += \"WORD PROGRESS\\n\";\n    csvContent += \"Spanish,English,Mastery Level,Correct,Total,Accuracy,Next Review\\n\";\n    reportData.wordProgress.forEach(word => {\n      csvContent += `${word.spanish},${word.english},${word.masteryLevel},${word.timesCorrect},${word.timesShown},${word.accuracy},${word.nextReview}\\n`;\n    });\n\n    const csvBlob = new Blob([csvContent], { type: 'text/csv' });\n    const url = URL.createObjectURL(csvBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `spanish-learning-report-${new Date().toISOString().split('T')[0]}.csv`;\n    \n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    URL.revokeObjectURL(url);\n    \n    return { success: true, message: 'Learning report exported successfully!' };\n  } catch (error) {\n    console.error('Export failed:', error);\n    return { success: false, message: 'Failed to export report. Please try again.' };\n  }\n};\n\nconst calculateAnalytics = (gameState) => {\n  const totalWords = gameState.wordStats.size;\n  const masteredWords = Array.from(gameState.wordStats.values())\n    .filter(stat => stat.masteryLevel >= gameState.settings.masteryThreshold).length;\n  const averageAccuracy = gameState.sessionStats.questionsAnswered > 0 \n    ? (gameState.sessionStats.correctAnswers / gameState.sessionStats.questionsAnswered) * 100 \n    : 0;\n  const sessionTime = gameState.sessionStats.startTime \n    ? (Date.now() - gameState.sessionStats.startTime) / 1000 / 60 \n    : 0;\n  \n  return {\n    totalWords,\n    masteredWords,\n    averageAccuracy,\n    sessionTime,\n    wordsPerMinute: sessionTime > 0 ? gameState.wordsCompleted / sessionTime : 0\n  };\n};\n\n// Auto-save functionality (saves to localStorage as backup)\n// src/components/GameInterface.js - Updated with Save Button\n//import { Trophy, Star, BarChart3, Settings, Lightbulb, LightbulbOff, RotateCcw, Brain, CheckCircle, XCircle, Download, Upload, FileText } from 'lucide-react';\nimport QuestionRenderer from './QuestionRenderer';\n//import { saveGameData, loadGameData, exportLearningReport } from '../utils/saveUtils';\n\nconst GameInterface = ({\n  selectedLevel,\n  selectedTopic,\n  isRandomMode,\n  hintsEnabled,\n  setHintsEnabled,\n  showAnalytics,\n  setShowAnalytics,\n  showSettings,\n  setShowSettings,\n  resetGame,\n  currentWord,\n  questionType,\n  userAnswer,\n  selectedChoice,\n  feedback,\n  score,\n  streak,\n  wordsCompleted,\n  sessionStats,\n  wordStats,\n  settings,\n  selectedLevelsForRandom,\n  checkAnswer,\n  setUserAnswer,\n  setSelectedChoice,\n  generateNextQuestion,\n  levels,\n  multipleChoiceOptions,\n  fillBlankSentence,\n  fillBlankAnswer,\n  // Save/Load functions that should be passed from parent\n  onLoadGameData\n}) => {\n  const [saveMessage, setSaveMessage] = useState('');\n  const [showSaveOptions, setShowSaveOptions] = useState(false);\n\n  const getAnalyticsData = () => {\n    const totalWords = wordStats.size;\n    const masteredWords = Array.from(wordStats.values()).filter(stat => stat.masteryLevel >= settings.masteryThreshold).length;\n    const averageAccuracy = sessionStats.questionsAnswered > 0 ? (sessionStats.correctAnswers / sessionStats.questionsAnswered) * 100 : 0;\n    const sessionTime = sessionStats.startTime ? (Date.now() - sessionStats.startTime) / 1000 / 60 : 0;\n    \n    return {\n      totalWords,\n      masteredWords,\n      averageAccuracy,\n      sessionTime,\n      wordsPerMinute: sessionTime > 0 ? wordsCompleted / sessionTime : 0\n    };\n  };\n\n  const getCurrentWordStats = () => {\n    if (!currentWord) return null;\n    const key = `${currentWord.spanish}-${currentWord.english}`;\n    return wordStats.get(key);\n  };\n\n  const handleSave = () => {\n    const gameState = {\n      wordStats,\n      sessionStats,\n      settings,\n      score,\n      streak,\n      wordsCompleted,\n      selectedLevel,\n      selectedTopic,\n      isRandomMode,\n      selectedLevelsForRandom\n    };\n\n    const result = saveGameData(gameState);\n    setSaveMessage(result.message);\n    setTimeout(() => setSaveMessage(''), 3000);\n  };\n\n  const handleLoad = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const result = loadGameData(e.target.result);\n      if (result.success && onLoadGameData) {\n        onLoadGameData(result.data);\n        setSaveMessage('Progress loaded successfully!');\n      } else {\n        setSaveMessage(result.message);\n      }\n      setTimeout(() => setSaveMessage(''), 3000);\n    };\n    reader.readAsText(file);\n    event.target.value = ''; // Reset file input\n  };\n\n  const handleExportReport = () => {\n    const gameState = {\n      wordStats,\n      sessionStats,\n      settings,\n      score,\n      streak,\n      wordsCompleted\n    };\n\n    const result = exportLearningReport(gameState);\n    setSaveMessage(result.message);\n    setTimeout(() => setSaveMessage(''), 3000);\n  };\n\n  const currentStats = getCurrentWordStats();\n  const analytics = getAnalyticsData();\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-2xl shadow-2xl p-8 max-w-lg w-full\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div className=\"flex items-center gap-2\">\n            <Trophy className=\"w-6 h-6 text-yellow-500\" />\n            <span className=\"text-2xl font-bold text-gray-800\">{score}</span>\n            <div className=\"ml-2 px-2 py-1 bg-blue-100 text-blue-700 text-xs rounded-full\">\n              {analytics.masteredWords}/{analytics.totalWords} mastered\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"flex items-center gap-1\">\n              <Star className=\"w-5 h-5 text-orange-500\" />\n              <span className=\"font-semibold text-gray-700\">{streak}</span>\n            </div>\n            \n            {/* Save/Load Dropdown */}\n            <div className=\"relative\">\n              <button\n                onClick={() => setShowSaveOptions(!showSaveOptions)}\n                className=\"p-2 bg-indigo-100 hover:bg-indigo-200 rounded-full transition-colors\"\n                title=\"Save/Load Options\"\n              >\n                <Download className=\"w-5 h-5 text-indigo-600\" />\n              </button>\n              \n              {showSaveOptions && (\n                <div className=\"absolute right-0 top-12 bg-white border border-gray-200 rounded-lg shadow-lg z-50 min-w-48\">\n                  <button\n                    onClick={handleSave}\n                    className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center gap-2 border-b border-gray-100\"\n                  >\n                    <Download className=\"w-4 h-4 text-green-600\" />\n                    Save Progress\n                  </button>\n                  \n                  <label className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center gap-2 cursor-pointer border-b border-gray-100\">\n                    <Upload className=\"w-4 h-4 text-blue-600\" />\n                    Load Progress\n                    <input\n                      type=\"file\"\n                      accept=\".json\"\n                      onChange={handleLoad}\n                      className=\"hidden\"\n                    />\n                  </label>\n                  \n                  <button\n                    onClick={handleExportReport}\n                    className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center gap-2\"\n                  >\n                    <FileText className=\"w-4 h-4 text-purple-600\" />\n                    Export Report\n                  </button>\n                  \n                  <button\n                    onClick={() => setShowSaveOptions(false)}\n                    className=\"w-full px-4 py-2 text-center text-gray-500 hover:bg-gray-50 text-sm\"\n                  >\n                    Close\n                  </button>\n                </div>\n              )}\n            </div>\n\n            <button\n              onClick={() => setShowAnalytics(true)}\n              className=\"p-2 bg-green-100 hover:bg-green-200 rounded-full transition-colors\"\n              title=\"View Analytics\"\n            >\n              <BarChart3 className=\"w-5 h-5 text-green-600\" />\n            </button>\n            <button\n              onClick={() => setShowSettings(true)}\n              className=\"p-2 bg-gray-100 hover:bg-gray-200 rounded-full transition-colors\"\n              title=\"Settings\"\n            >\n              <Settings className=\"w-5 h-5 text-gray-600\" />\n            </button>\n            <button\n              onClick={() => setHintsEnabled(!hintsEnabled)}\n              className={`p-2 rounded-full transition-colors ${\n                hintsEnabled \n                  ? 'bg-yellow-100 hover:bg-yellow-200 text-yellow-700' \n                  : 'bg-gray-100 hover:bg-gray-200 text-gray-600'\n              }`}\n              title={hintsEnabled ? 'Disable hints' : 'Enable hints'}\n            >\n              {hintsEnabled ? <Lightbulb className=\"w-5 h-5\" /> : <LightbulbOff className=\"w-5 h-5\" />}\n            </button>\n            <button\n              onClick={resetGame}\n              className=\"p-2 bg-gray-100 hover:bg-gray-200 rounded-full transition-colors\"\n              title=\"Reset Game\"\n            >\n              <RotateCcw className=\"w-5 h-5 text-gray-600\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Save Message */}\n        {saveMessage && (\n          <div className={`mb-4 p-3 rounded-lg text-sm ${\n            saveMessage.includes('successfully') \n              ? 'bg-green-100 text-green-800 border border-green-200' \n              : 'bg-red-100 text-red-800 border border-red-200'\n          }`}>\n            {saveMessage}\n          </div>\n        )}\n\n        <div className=\"text-center mb-6\">\n          {isRandomMode ? (\n            <div>\n              <h2 className=\"text-lg text-purple-600 mb-1 flex items-center justify-center gap-2\">\n                <Brain className=\"w-5 h-5\" />\n                Smart Random Mode\n              </h2>\n              <p className=\"text-sm text-gray-500\">\n                AI-optimized learning • {Object.entries(selectedLevelsForRandom)\n                  .filter(([_, selected]) => selected)\n                  .map(([level]) => level)\n                  .join(', ')} levels\n              </p>\n            </div>\n          ) : (\n            <div>\n              <h2 className=\"text-lg text-gray-600 mb-1\">{levels[selectedLevel].name}</h2>\n              <h3 className=\"text-md text-gray-500 mb-2 capitalize\">{selectedTopic} Topic</h3>\n            </div>\n          )}\n          <div className=\"flex items-center justify-center gap-4 text-sm text-gray-500\">\n            <span>Words: {wordsCompleted}</span>\n            <span>Accuracy: {analytics.averageAccuracy.toFixed(1)}%</span>\n            <span>WPM: {analytics.wordsPerMinute.toFixed(1)}</span>\n          </div>\n          \n          {currentStats && currentStats.timesShown > 0 && (\n            <div className=\"mt-2 flex items-center justify-center gap-4 text-xs text-gray-400\">\n              <span>This word: {Math.round((currentStats.timesCorrect / currentStats.timesShown) * 100)}%</span>\n              <span>Mastery: {Math.round(currentStats.masteryLevel * 100)}%</span>\n              {settings.spacedRepetitionEnabled && (\n                <span>Next review: {new Date(currentStats.nextReview).toLocaleDateString()}</span>\n              )}\n            </div>\n          )}\n        </div>\n\n        {currentWord && (\n          <QuestionRenderer\n            currentWord={currentWord}\n            questionType={questionType}\n            userAnswer={userAnswer}\n            selectedChoice={selectedChoice}\n            feedback={feedback}\n            hintsEnabled={hintsEnabled}\n            settings={settings}\n            setUserAnswer={setUserAnswer}\n            setSelectedChoice={setSelectedChoice}\n            checkAnswer={checkAnswer}\n            multipleChoiceOptions={multipleChoiceOptions}\n            fillBlankSentence={fillBlankSentence}\n            fillBlankAnswer={fillBlankAnswer}\n          />\n        )}\n\n        {feedback && (\n          <div className={`flex items-center gap-3 p-4 rounded-xl mb-4 ${\n            feedback.type === 'correct' \n              ? 'bg-green-100 text-green-800 border-2 border-green-300' \n              : 'bg-red-100 text-red-800 border-2 border-red-300'\n          }`}>\n            {feedback.type === 'correct' ? (\n              <CheckCircle className=\"w-6 h-6\" />\n            ) : (\n              <XCircle className=\"w-6 h-6\" />\n            )}\n            <div>\n              <span className=\"font-semibold\">{feedback.message}</span>\n              {feedback.details && (\n                <div className=\"text-sm opacity-80 mt-1\">{feedback.details}</div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {streak > 0 && (\n          <div className=\"text-center\">\n            <p className=\"text-orange-600 font-semibold\">\n              🔥 {streak} streak! +{streak * 2} bonus points per answer!\n            </p>\n            {streak === sessionStats.streakRecord && streak > 5 && (\n              <p className=\"text-purple-600 text-sm\">New personal record! 🎉</p>\n            )}\n          </div>\n        )}\n        \n        {/* Progress indicator */}\n        {analytics.masteredWords > 0 && (\n          <div className=\"mt-4 text-center\">\n            <div className=\"bg-gray-200 rounded-full h-2 mb-2\">\n              <div \n                className=\"bg-gradient-to-r from-green-400 to-green-600 h-2 rounded-full transition-all duration-500\"\n                style={{ width: `${(analytics.masteredWords / analytics.totalWords) * 100}%` }}\n              ></div>\n            </div>\n            <p className=\"text-sm text-gray-600\">\n              Learning Progress: {((analytics.masteredWords / analytics.totalWords) * 100).toFixed(1)}%\n            </p>\n          </div>\n        )}\n        \n        {/* Auto-save indicator */}\n        <div className=\"mt-4 text-center\">\n          <p className=\"text-xs text-gray-400\">\n            💾 Progress is automatically tracked • Use save button to download backup\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}