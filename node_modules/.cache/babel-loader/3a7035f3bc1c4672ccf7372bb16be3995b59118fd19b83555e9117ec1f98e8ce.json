{"ast":null,"code":"var _jsxFileName = \"/Users/alasdairmacmillan/Claude/Spanish/src/components/SpanishLearningGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LevelSelection from './LevelSelection';\nimport GameInterface from './GameInterface';\nimport Analytics from './Analytics';\nimport Settings from './Settings';\nimport RandomConfig from './RandomConfig';\nimport { useWordStats } from '../utils/wordUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpanishLearningGame = () => {\n  _s();\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  const [isRandomMode, setIsRandomMode] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [hintsEnabled, setHintsEnabled] = useState(true);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showRandomConfig, setShowRandomConfig] = useState(false);\n  const [selectedLevelsForRandom, setSelectedLevelsForRandom] = useState({\n    A1: true,\n    A2: true,\n    B1: true,\n    B2: true\n  });\n  const {\n    wordStats,\n    availableWords,\n    currentWord,\n    questionType,\n    userAnswer,\n    selectedChoice,\n    feedback,\n    score,\n    streak,\n    wordsCompleted,\n    sessionStats,\n    settings,\n    setSettings,\n    initializeWordPool,\n    generateNextQuestion,\n    checkAnswer,\n    setUserAnswer,\n    setSelectedChoice,\n    setFeedback\n  } = useWordStats();\n  const startRandomMode = () => {\n    const selectedLevelCount = Object.values(selectedLevelsForRandom).filter(Boolean).length;\n    if (selectedLevelCount === 0) {\n      alert('Please select at least one level for random mode.');\n      return;\n    }\n    setShowRandomConfig(false);\n    startGame('ALL', 'ALL', true);\n  };\n  const startGame = (level, topic, randomMode = false) => {\n    setSelectedLevel(level);\n    setSelectedTopic(topic);\n    setIsRandomMode(randomMode);\n    setGameStarted(true);\n    setScore(0);\n    setStreak(0);\n    setWordsCompleted(0);\n    setFeedback(null);\n    initializeWordPool(level, topic, randomMode, selectedLevelsForRandom);\n  };\n  const resetGame = () => {\n    setSelectedLevel(null);\n    setSelectedTopic(null);\n    setIsRandomMode(false);\n    setGameStarted(false);\n    setFeedback(null);\n    setShowAnalytics(false);\n    setShowSettings(false);\n    setShowRandomConfig(false);\n  };\n  if (!gameStarted) {\n    return /*#__PURE__*/_jsxDEV(LevelSelection, {\n      hintsEnabled: hintsEnabled,\n      setHintsEnabled: setHintsEnabled,\n      showRandomConfig: showRandomConfig,\n      setShowRandomConfig: setShowRandomConfig,\n      showSettings: showSettings,\n      setShowSettings: setShowSettings,\n      startGame: startGame,\n      selectedLevelsForRandom: selectedLevelsForRandom,\n      setSelectedLevelsForRandom: setSelectedLevelsForRandom,\n      startRandomMode: startRandomMode,\n      settings: settings,\n      setSettings: setSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GameInterface, {\n      selectedLevel: selectedLevel,\n      selectedTopic: selectedTopic,\n      isRandomMode: isRandomMode,\n      hintsEnabled: hintsEnabled,\n      setHintsEnabled: setHintsEnabled,\n      showAnalytics: showAnalytics,\n      setShowAnalytics: setShowAnalytics,\n      showSettings: showSettings,\n      setShowSettings: setShowSettings,\n      resetGame: resetGame,\n      currentWord: currentWord,\n      questionType: questionType,\n      userAnswer: userAnswer,\n      selectedChoice: selectedChoice,\n      feedback: feedback,\n      score: score,\n      streak: streak,\n      wordsCompleted: wordsCompleted,\n      sessionStats: sessionStats,\n      wordStats: wordStats,\n      settings: settings,\n      selectedLevelsForRandom: selectedLevelsForRandom,\n      checkAnswer: checkAnswer,\n      setUserAnswer: setUserAnswer,\n      setSelectedChoice: setSelectedChoice,\n      generateNextQuestion: generateNextQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), showAnalytics && /*#__PURE__*/_jsxDEV(Analytics, {\n      sessionStats: sessionStats,\n      wordStats: wordStats,\n      settings: settings,\n      setShowAnalytics: setShowAnalytics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(Settings, {\n      settings: settings,\n      setSettings: setSettings,\n      setShowSettings: setShowSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), showRandomConfig && /*#__PURE__*/_jsxDEV(RandomConfig, {\n      selectedLevelsForRandom: selectedLevelsForRandom,\n      setSelectedLevelsForRandom: setSelectedLevelsForRandom,\n      setShowRandomConfig: setShowRandomConfig,\n      startRandomMode: startRandomMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SpanishLearningGame, \"+Qd2ptN10DaGQ8FjKgKEz8duDwk=\", false, function () {\n  return [useWordStats];\n});\n_c = SpanishLearningGame;\nexport default SpanishLearningGame;\nvar _c;\n$RefreshReg$(_c, \"SpanishLearningGame\");","map":{"version":3,"names":["React","useState","useEffect","LevelSelection","GameInterface","Analytics","Settings","RandomConfig","useWordStats","jsxDEV","_jsxDEV","Fragment","_Fragment","SpanishLearningGame","_s","selectedLevel","setSelectedLevel","selectedTopic","setSelectedTopic","isRandomMode","setIsRandomMode","gameStarted","setGameStarted","hintsEnabled","setHintsEnabled","showAnalytics","setShowAnalytics","showSettings","setShowSettings","showRandomConfig","setShowRandomConfig","selectedLevelsForRandom","setSelectedLevelsForRandom","A1","A2","B1","B2","wordStats","availableWords","currentWord","questionType","userAnswer","selectedChoice","feedback","score","streak","wordsCompleted","sessionStats","settings","setSettings","initializeWordPool","generateNextQuestion","checkAnswer","setUserAnswer","setSelectedChoice","setFeedback","startRandomMode","selectedLevelCount","Object","values","filter","Boolean","length","alert","startGame","level","topic","randomMode","setScore","setStreak","setWordsCompleted","resetGame","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/alasdairmacmillan/Claude/Spanish/src/components/SpanishLearningGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LevelSelection from './LevelSelection';\nimport GameInterface from './GameInterface';\nimport Analytics from './Analytics';\nimport Settings from './Settings';\nimport RandomConfig from './RandomConfig';\nimport { useWordStats } from '../utils/wordUtils';\n\nconst SpanishLearningGame = () => {\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  const [isRandomMode, setIsRandomMode] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [hintsEnabled, setHintsEnabled] = useState(true);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showRandomConfig, setShowRandomConfig] = useState(false);\n  const [selectedLevelsForRandom, setSelectedLevelsForRandom] = useState({\n    A1: true,\n    A2: true,\n    B1: true,\n    B2: true\n  });\n  \n  const {\n    wordStats,\n    availableWords,\n    currentWord,\n    questionType,\n    userAnswer,\n    selectedChoice,\n    feedback,\n    score,\n    streak,\n    wordsCompleted,\n    sessionStats,\n    settings,\n    setSettings,\n    initializeWordPool,\n    generateNextQuestion,\n    checkAnswer,\n    setUserAnswer,\n    setSelectedChoice,\n    setFeedback\n  } = useWordStats();\n\n  const startRandomMode = () => {\n    const selectedLevelCount = Object.values(selectedLevelsForRandom).filter(Boolean).length;\n    if (selectedLevelCount === 0) {\n      alert('Please select at least one level for random mode.');\n      return;\n    }\n    setShowRandomConfig(false);\n    startGame('ALL', 'ALL', true);\n  };\n\n  const startGame = (level, topic, randomMode = false) => {\n    setSelectedLevel(level);\n    setSelectedTopic(topic);\n    setIsRandomMode(randomMode);\n    setGameStarted(true);\n    setScore(0);\n    setStreak(0);\n    setWordsCompleted(0);\n    setFeedback(null);\n    \n    initializeWordPool(level, topic, randomMode, selectedLevelsForRandom);\n  };\n\n  const resetGame = () => {\n    setSelectedLevel(null);\n    setSelectedTopic(null);\n    setIsRandomMode(false);\n    setGameStarted(false);\n    setFeedback(null);\n    setShowAnalytics(false);\n    setShowSettings(false);\n    setShowRandomConfig(false);\n  };\n\n  if (!gameStarted) {\n    return (\n      <LevelSelection\n        hintsEnabled={hintsEnabled}\n        setHintsEnabled={setHintsEnabled}\n        showRandomConfig={showRandomConfig}\n        setShowRandomConfig={setShowRandomConfig}\n        showSettings={showSettings}\n        setShowSettings={setShowSettings}\n        startGame={startGame}\n        selectedLevelsForRandom={selectedLevelsForRandom}\n        setSelectedLevelsForRandom={setSelectedLevelsForRandom}\n        startRandomMode={startRandomMode}\n        settings={settings}\n        setSettings={setSettings}\n      />\n    );\n  }\n\n  return (\n    <>\n      <GameInterface\n        selectedLevel={selectedLevel}\n        selectedTopic={selectedTopic}\n        isRandomMode={isRandomMode}\n        hintsEnabled={hintsEnabled}\n        setHintsEnabled={setHintsEnabled}\n        showAnalytics={showAnalytics}\n        setShowAnalytics={setShowAnalytics}\n        showSettings={showSettings}\n        setShowSettings={setShowSettings}\n        resetGame={resetGame}\n        currentWord={currentWord}\n        questionType={questionType}\n        userAnswer={userAnswer}\n        selectedChoice={selectedChoice}\n        feedback={feedback}\n        score={score}\n        streak={streak}\n        wordsCompleted={wordsCompleted}\n        sessionStats={sessionStats}\n        wordStats={wordStats}\n        settings={settings}\n        selectedLevelsForRandom={selectedLevelsForRandom}\n        checkAnswer={checkAnswer}\n        setUserAnswer={setUserAnswer}\n        setSelectedChoice={setSelectedChoice}\n        generateNextQuestion={generateNextQuestion}\n      />\n      \n      {showAnalytics && (\n        <Analytics\n          sessionStats={sessionStats}\n          wordStats={wordStats}\n          settings={settings}\n          setShowAnalytics={setShowAnalytics}\n        />\n      )}\n      \n      {showSettings && (\n        <Settings\n          settings={settings}\n          setSettings={setSettings}\n          setShowSettings={setShowSettings}\n        />\n      )}\n      \n      {showRandomConfig && (\n        <RandomConfig\n          selectedLevelsForRandom={selectedLevelsForRandom}\n          setSelectedLevelsForRandom={setSelectedLevelsForRandom}\n          setShowRandomConfig={setShowRandomConfig}\n          startRandomMode={startRandomMode}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SpanishLearningGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}